{"version":3,"file":"lib_index_js.6718963dfcf6a42cf5eb.js","mappings":"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","sources":["webpack://cbioportal-extension/./src/index.ts"],"sourcesContent":["import { JupyterFrontEnd, JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { IFileBrowserFactory } from '@jupyterlab/filebrowser';\nimport { NotebookActions, NotebookModel, NotebookPanel } from '@jupyterlab/notebook';\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'cbioportal-jupyterlite:plugin',\n  autoStart: true,\n  requires: [IDocumentManager,IFileBrowserFactory],\n  activate: (app: JupyterFrontEnd, contentsManager: IDocumentManager, filebrowserFactory: IFileBrowserFactory) => {\n    console.log('JupyterLab extension jupyterlab-iframe-bridge-example is activated!');\n\n    // Extension getting activated\n    window.parent.postMessage({ type: 'file-communication', message: 'JupyterLab extension jupyterlab-iframe-bridge-example is activated!' }, '*');\n\n    // Notifications from the host\n    window.addEventListener('message', async (event) => {\n      if (event.data.type === 'from-host-to-iframe-for-file-execution') {\n        const { folderName, notebookContent } = event.data;\n        try {\n          await executeCode(folderName, notebookContent);\n        } catch (error) {\n          console.error('File Execution Error: ', error);\n        }\n      }\n\n      if (event.data.type === 'from-host-to-iframe-for-file-saving') {\n        const { filename, fileContent, folderName } = event.data;\n\n        try {\n          await saveContentToFile(filename, fileContent, folderName)\n          notifyHostFileSaved()\n        } catch (error) {\n          console.error('File Saving Error: ', error)\n        }\n      }\n    });\n\n    const naviagateToFolder = async (folderPath: string) => {\n      try {\n        const browser = filebrowserFactory.tracker.currentWidget\n\n        await browser?.model.cd(folderPath)\n\n        const items = browser?.model.items()\n\n       if(items){\n        for (const item of items) {\n          if(item.name.startsWith(\"untitle\") && item.type === 'file') {\n            await contentsManager.services.contents.delete(item.path)\n            break;\n          }\n        }\n       }\n              } catch (error) {\n        console.log(error)\n      }\n    }\n\n    // creating a directory first before saving the file.\n    const ensureFolderExists = async (folderName: string): Promise<string> => {\n      try {\n        const checkDir = await contentsManager.services.contents.get(folderName);\n        return checkDir?.path\n      } catch (error) {\n        const newDir = await contentsManager.services.contents.save(folderName, {\n          name: folderName,\n          type: 'directory',\n          content : null\n        });\n\n        const textFile = await contentsManager.services.contents.get(`${newDir.path}`,{\n          type: 'text'\n        })\n\n        console.log(textFile.name)\n\n        return newDir.path\n      }\n    };\n    // saving file in the directory\n    const saveContentToFile = async (filename: string, fileContent: string, folderName: string) => {\n      const folderPath = await ensureFolderExists(folderName);\n      const filePath = `${folderPath}/${filename}`\n\n      await naviagateToFolder(folderPath)\n\n      return contentsManager.services.contents.save(filePath, {\n        name: filename,\n        content: fileContent,\n        writable: true,\n      })\n    }\n\n    // Auto-execution of code\n    const executeCode = async (folderName: string, notebookContent: any): Promise<void> => {\n      try {\n\n        const folderPath = await ensureFolderExists(folderName);\n\n        // Create a new untitled notebook\n        const model = await contentsManager.services.contents.newUntitled({ type: 'notebook', path: folderPath });\n\n        const filePath = model.path;\n\n        // Open the newly created notebook\n        const widget = contentsManager.open(filePath, 'default', { name: 'python' });\n\n        if (widget instanceof NotebookPanel) {\n\n          await widget.sessionContext.ready\n          await widget.revealed\n          const notebook = widget.content;\n          if (notebook && notebook.model !== null) {\n            \n            await new Promise<void>(resolve => {\n              if(notebook.model && notebook.model.cells.length > 0) resolve();\n\n              else notebook.model?.cells.changed.connect(() => resolve(), { once: true });\n\n            });\n\n            (notebook.model as NotebookModel).fromJSON(notebookContent);\n            await NotebookActions.runAll(notebook, widget.context.sessionContext);\n\n            // await NotebookActions.runAndAdvance(notebook, widget.sessionContext);\n\n            notifyHostFileExecuted();\n          } else {\n            throw new Error('Notebook model is undefined');\n          }\n        } else {\n          throw new Error('Widget is not a NotebookPanel');\n        }\n      } catch (error) {\n        console.error('Notebook Execution Error: ', error);\n      }\n    };\n\n    // Notifications for the host\n\n    const notifyHostFileSaved = (): void => {\n      const message = { type: 'from-iframe-to-host-about-file-status', message: 'File saved successfully' };\n      window.parent.postMessage(message, '*');\n    };\n\n    const notifyHostFileExecuted = (): void => {\n      const message = { type: 'from-iframe-to-host-about-file-execution', message: 'File executed successfully' };\n      window.parent.postMessage(message, '*');\n    };\n  },\n};\n\nexport default plugin;"],"names":[],"sourceRoot":""}